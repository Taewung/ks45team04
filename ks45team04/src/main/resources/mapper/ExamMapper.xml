<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks45team04.sos.member.mapper.ExamMapper">

	<resultMap type="LicenseInfo" id="licenseInfoResultMap">
		<id property="liCode" 							column="li_code"/>
		<result property="lmcCode" 				column="lmc_code"/>
		<result property="lmcName" 				column="lmc_name"/>
		<result property="lscCode" 					column="lsc_code"/>
		<result property="lscName" 				column="lsc_name"/>
		<result property="liName" 					column="li_name"/>
		<result property="liOverview" 			column="li_overview"/>
		<result property="liQualification" 	column="li_qualification"/>
		<result property="liRegId" 					column="li_reg_id"/>
		<result property="liRegDatetime" 	column="li_reg_datetime"/>
	</resultMap>
	<resultMap type="LicenseMain" id="licenseMainResultMap">
		<id property="lmcCode" 							column="lmc_code"/>
		<result property="lmcRegId" 					column="lmc_reg_id"/>
		<result property="lmcName" 					column="lmc_name"/>
		<result property="lmcRegDatetime" 	column="lmc_reg_datetime"/>
	</resultMap>
	<resultMap type="LicenseSub" id="licenseSubResultMap">
		<id property="lscCode" 								column="lsc_code"/>
		<result property="lmcCode" 					column="lmc_code"/>
		<result property="lmcName" 					column="lmc_name"/>
		<result property="lscName" 					column="lsc_name"/>
		<result property="lscRegId" 					column="lsc_reg_id"/>
		<result property="lscRegDatetime" 	column="lsc_reg_datetime"/>
	</resultMap>
	<resultMap type="LicenseSubject" id="licenseSubjectResultMap">
		<id property="lsCode" 							column="ls_code"/>
		<result property="liCode" 					column="li_code"/>
		<result property="liName" 					column="li_name"/>
		<result property="lsSubject" 				column="ls_subject"/>
		<result property="lsName" 					column="ls_name"/>
		<result property="lsRegId" 					column="ls_reg_id"/>
		<result property="lsRegDatetime" 	column="ls_reg_datetime"/>
	</resultMap>
	<resultMap type="Question" id="questionResultMap">
		<id 	property="questionCode" 							column="question_code"/>
		<result property="liCode" 										column="li_code"/>			
		<result property="lsCode" 										column="ls_code"/>			
		<result property="liName" 										column="li_name"/>			
		<result property="lsSubject" 									column="ls_subject"/>			
		<result property="lsName" 									column="ls_name"/>			
		<result property="question" 									column="question"/>			
		<result property="questionScore" 						column="question_score"/>			
		<result property="questionRegId" 						column="question_reg_id"/>				
		<result property="questionRegDateTime" 		column="question_reg_datetime"/>				
	</resultMap>
	<resultMap type="Exam" id="examResultMap">
		<id 	property="examCode" 								column="exam_code"/>
		<result property="examGroupCode" 			column="exam_group_code"/>			
		<result property="liCode" 								column="li_code"/>			
		<result property="lsCode" 								column="ls_code"/>			
		<result property="questionCode" 				column="question_code"/>			
		<result property="question" 							column="question"/>			
		<result property="examRegId" 					column="exam_reg_id"/>			
		<result property="examRegDateTime" 	column="exam_reg_datetime"/>				
	</resultMap>
	
	
	<insert id="addExamPaper" parameterType="java.util.List">
		/* 시험지생성 */
		INSERT INTO exam 
		(exam_code, exam_group_code, li_code, ls_code, question_code, question, exam_reg_id, exam_reg_datetime)	
		VALUES
		<foreach collection='list' item='item' separator=','>
			(sf_exam_code(), #{item.examGroupCode}, #{item.liCode}, #{item.lsCode}, #{item.questionCode}, #{item.question}, #{item.examRegId}, NOW() )
		</foreach>
	</insert>
	<select id="getNewExamCode" parameterType="String" resultType="String">
		/* 시험지PK 자동생성 */			
		SELECT 
			CASE 
			WHEN COUNT(1) = 0
				THEN 'exam_001'
			WHEN (MAX(CAST(SUBSTRING_INDEX(${examCode}, 'exam_', -1)AS UNSIGNED)+1) > 999)
				THEN CONCAT('exam_', MAX(CAST(SUBSTRING_INDEX(${examCode}, 'exam_', -1)AS UNSIGNED))+1)
			ELSE 
				CONCAT('exam_', LPAD(MAX(CAST(SUBSTRING_INDEX(${examCode}, 'exam_', -1)AS UNSIGNED))+1, 3, 0))
			END AS eCode
		FROM
			${exam};
	</select>
	<select id="getQuestionList" resultMap="questionResultMap" parameterType="String">	
		/* 자격증 과목별 문제조회 */
		SELECT
			 q.question_code
			,q.li_code
			,q.ls_code
			,q.li_name
			,q.ls_subject
			,q.ls_name
			,q.question
			,q.question_score
			,q.question_reg_id
			,q.question_reg_datetime
		FROM
			question AS q
		WHERE
			q.li_code = #{liCode};
	</select>
	<select id="getSubjectListForExam" resultMap="licenseSubjectResultMap" parameterType="String">	
		/* 자격증별 과목목록 조회 */
		SELECT 
			 ls.ls_code
			,ls.li_name
			,ls.li_code
			,ls.ls_subject
			,ls.ls_name
			,ls.ls_reg_id
			,ls.ls_reg_datetime
		FROM 
			license_subject AS ls
		WHERE
			ls.li_code = #{liCode};
	</select>
	<select id="getLiListForExam" resultMap="licenseInfoResultMap" parameterType="String">	
		/* 중분류별 자격증 목록조회 */
		SELECT 
			 li.li_code
			,li.lmc_code
			,li.lmc_name
			,li.lsc_code
			,li.lsc_name
			,li.li_name
			,li.li_overview
			,li.li_qualification
			,li.li_reg_id
			,li.li_reg_date
		FROM
			license_info AS li
		WHERE 
			li.lsc_code = #{lscCode};	
	</select>
	<select id="getSubListForExam" resultMap="licenseSubResultMap" parameterType="String">	
		/* 대분류별 중분류 목록조회 */
		SELECT 
			 ls.lsc_code
			,ls.lmc_code
			,ls.lmc_name
			,ls.lsc_name
			,ls.lsc_reg_id
			,ls.lsc_reg_datetime 
		FROM
			license_sub_category AS ls
		WHERE 
			ls.lmc_code = #{lmcCode};
	</select>
	<select id="getMainLisForExam" resultMap="licenseMainResultMap">
		/* 대분류 목록조회 */
		SELECT
			  lm.lmc_code
			 ,lm.lmc_name
		FROM
			license_main_category AS lm;	
	</select>	
</mapper>